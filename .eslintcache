[{"/home/brainz/caterfoods/my-app/src/reportWebVitals.js":"1","/home/brainz/caterfoods/my-app/src/App.js":"2","/home/brainz/caterfoods/my-app/src/code/Components/Theme.js":"3","/home/brainz/caterfoods/my-app/src/code/layouts/Header.js":"4","/home/brainz/caterfoods/my-app/src/index.js":"5","/home/brainz/caterfoods/my-app/src/code/Components/CustomIcon.js":"6","/home/brainz/caterfoods/my-app/src/code/pages/Home/LandingPage.js":"7","/home/brainz/caterfoods/my-app/src/code/pages/Home/Menu.js":"8","/home/brainz/caterfoods/my-app/src/code/Components/context/ContextState.js":"9"},{"size":362,"mtime":1609737886184,"results":"10","hashOfConfig":"11"},{"size":1233,"mtime":1609838970115,"results":"12","hashOfConfig":"11"},{"size":2122,"mtime":1609878369379,"results":"13","hashOfConfig":"11"},{"size":9397,"mtime":1609879995079,"results":"14","hashOfConfig":"11"},{"size":473,"mtime":1609738699300,"results":"15","hashOfConfig":"11"},{"size":240,"mtime":1609791845857,"results":"16","hashOfConfig":"11"},{"size":5640,"mtime":1609940584272,"results":"17","hashOfConfig":"11"},{"size":1173,"mtime":1609889953291,"results":"18","hashOfConfig":"11"},{"size":451,"mtime":1609785446369,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1eyhygt",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/brainz/caterfoods/my-app/src/reportWebVitals.js",[],["42","43"],"/home/brainz/caterfoods/my-app/src/App.js",[],["44","45"],"/home/brainz/caterfoods/my-app/src/code/Components/Theme.js",[],"/home/brainz/caterfoods/my-app/src/code/layouts/Header.js",["46"],"import React, { Fragment, useState, useEffect, useContext } from \"react\"\nimport {\n  AppBar,\n  useScrollTrigger,\n  Toolbar,\n  Tabs,\n  Tab,\n  Button,\n  useMediaQuery,\n  SwipeableDrawer,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  IconButton,\n  Typography,\n  Grid,\n} from \"@material-ui/core\"\nimport { Link } from \"react-router-dom\"\nimport { useTheme } from \"@material-ui/styles\"\nimport MenuIcons from \"@material-ui/icons/Menu\"\nimport Theme from \"../Components/Theme\"\n\nimport logo from \"../assets/img/logo.png\"\nimport background from \"../assets/img/background.jpg\"\nimport cart from \"../assets/img/order.png\"\nimport reserve from \"../assets/img/reservation.png\"\n\nimport CustomIcon from \"../Components/CustomIcon\"\nimport { AppContext } from \"../Components/context/ContextState\"\n\nconst useStyles = makeStyles((theme) => ({\n  toolBarMargin: {\n    ...Theme.mixins.toolbar,\n    marginBottom: \"3em\",\n    [theme.breakpoints.down(\"md\")]: {\n      marginBottom: \"2em\",\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      height: \"1.25em\",\n    },\n  },\n  logo: {\n    height: \"5em\",\n    [theme.breakpoints.down(\"md\")]: {\n      height: \"6em\",\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      height: \"5em\",\n    },\n  },\n  tabContainer: {\n    marginLeft: \"auto\",\n  },\n  tab: {\n    ...theme.typography.tab,\n    minWidth: 10,\n    marginLeft: \"25px\",\n    color: theme.palette.common.black,\n    \"&:hover\": {\n      color: theme.palette.common.orange,\n      textDecoration: \"underline\",\n    },\n  },\n  button: {\n    color: theme.palette.common.black,\n    marginLeft: 30,\n    marginRight: 211,\n    backgroundColor: theme.palette.common.white,\n    borderRadius: 288,\n    height: 51,\n    width: 230,\n    \"&:hover\": {\n      color: \"#fff\",\n      backgroundColor: theme.palette.common.green,\n    },\n  },\n  logoContainer: {\n    padding: 10,\n    backgroundColor: \"#fff\",\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  menu: {\n    color: \"#fff\",\n    borderRadius: \"0px\",\n  },\n  menuItem: {\n    color: \"#fff\",\n    \"&:hover\": {\n      opacity: 1,\n    },\n  },\n  menuStyle: {\n    height: \"30px\",\n    width: \"30px\",\n    borderRadius: 15,\n    backgroundColor: theme.palette.common.orange,\n    color: theme.palette.common.white,\n  },\n  iconDrawer: {\n    \"&:hover\": { backgroundColor: \"transparent\" },\n    marginLeft: \"auto\",\n  },\n  drawer: {\n    backgroundColor: theme.palette.common.white,\n  },\n  drawerItem: {\n    ...theme.typography.tab,\n    color: theme.palette.common.orange,\n    opacity: 0.8,\n    padding: 10,\n    \"&:hover\": {\n      opacity: 1,\n      backgroundColor: theme.palette.common.orange,\n      color: \"#fff\",\n      borderRadius: 15,\n    },\n  },\n  bookList: {\n    backgroundColor: theme.palette.secondary.main,\n    \"&:hover\": { backgroundColor: \"#2A9E00\" },\n    color: \"#fff\",\n  },\n  drawerItemSelected: {\n    \"& .MuiListItemText-root\": {\n      opacity: 1,\n    },\n  },\n  appbar: {\n    zIndex: theme.zIndex.modal + 1,\n    opacity: 0.8,\n    backgroundColor: \"white\",\n  },\n  root: {\n    backgroundImage: `url(${background})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    width: \"100%\",\n    height: \"100%\",\n    backgroundPosition: \"center\",\n    minHeight: \"100vh\",\n  },\n  heroText: {\n    marginTop: \"10em\",\n    minWidth: \"20em\",\n    marginLeft: \"0.3em\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 0,\n      minWidth: \"15em\",\n    },\n  },\n  buttonR: {\n    color: theme.palette.common.white,\n    backgroundColor: theme.palette.common.orange,\n    borderRadius: 288,\n    height: 45,\n    width: 180,\n    \"&:hover\": {\n      color: theme.palette.common.white,\n      backgroundColor: theme.palette.secondary.sub,\n    },\n  },\n  buttonContainer: {\n    marginTop: 50,\n  },\n}))\n\nfunction ElevationScroll(props) {\n  const { children } = props\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n  })\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  })\n}\nconst Header = () => {\n  const { selectedIndex, setSelectedIndex, value, setValue } = useContext(\n    AppContext,\n  )\n  const theme = useTheme()\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent)\n  const matches = useMediaQuery(theme.breakpoints.down(\"md\"))\n  const matchesSM = useMediaQuery(theme.breakpoints.down(\"xs\"))\n\n  const [openDrawer, setOpenDrawer] = useState(false)\n  const classes = useStyles()\n\n  // Handles Changes in the tabs\n  const handleChange = (e, newValue) => {\n    setValue(newValue)\n  }\n  const routes = [\n    { name: \"Home\", link: \"/\", activeIndex: 0 },\n    {\n      name: \"Menu\",\n      link: \"/menu\",\n      activeIndex: 1,\n    },\n    { name: \"About Us\", link: \"/about\", activeIndex: 2 },\n    { name: \"Contact Us\", link: \"/contact\", activeIndex: 3 },\n  ]\n\n  useEffect(() => {\n    ;[...routes].forEach((route) => {\n      switch (window.location.pathname) {\n        case `${route.link}`:\n          if (value !== route.activeIndex) {\n            setValue(route.activeIndex)\n            if (route.selectedIndex && route.selectedIndex !== selectedIndex) {\n              setSelectedIndex(route.selectedIndex)\n            }\n          }\n          break\n        case \"/order\":\n          setValue(5)\n          break\n        default:\n          break\n      }\n    })\n  }, [value, selectedIndex, routes])\n\n  const tabs = (\n    <Fragment>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        className={classes.tabContainer}\n      >\n        {routes.map((route, index) => (\n          <Tab\n            key={`${route}${index}`}\n            className={classes.tab}\n            to={route.link}\n            component={Link}\n            label={route.name}\n          />\n        ))}\n      </Tabs>\n      <div\n        style={{\n          backgroundColor: \"#fff\",\n          elevation: 10,\n        }}\n      >\n        <Button\n          to=\"/order\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          startIcon={<CustomIcon src={cart} />}\n        >\n          Order Online\n        </Button>\n      </div>\n    </Fragment>\n  )\n  const drawer = (\n    <Fragment>\n      <SwipeableDrawer\n        disableBackdropTransition={!iOS}\n        disableDiscovery={iOS}\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n        onOpen={() => openDrawer(true)}\n        classes={{ paper: classes.drawer }}\n      >\n        <div className={classes.toolBarMargin} />\n        <List disablePadding>\n          {routes.map((route) => (\n            <ListItem\n              divider\n              key={`${route}${route.activeIndex}`}\n              button\n              component={Link}\n              to={route.link}\n              className={classes.options}\n              selected={value === route.activeIndex}\n              classes={{ selected: classes.drawerItemSelected }}\n              onClick={() => {\n                setOpenDrawer(false)\n                setValue(route.selectedIndex)\n              }}\n            >\n              <ListItemText className={classes.drawerItem} disableTypography>\n                {route.name}\n              </ListItemText>\n            </ListItem>\n          ))}\n          <ListItem\n            onClick={() => {\n              setOpenDrawer(false)\n              setValue(5)\n            }}\n            divider\n            component={Link}\n            to=\"/order\"\n            selected={value === 5}\n            classes={{ selected: classes.drawerItemSelected }}\n          >\n            <ListItemText className={classes.drawerItem} disableTypography>\n              Order Online\n            </ListItemText>\n          </ListItem>\n        </List>\n      </SwipeableDrawer>\n      <IconButton\n        className={classes.iconDrawer}\n        onClick={() => setOpenDrawer(!openDrawer)}\n        disableRipple\n      >\n        <MenuIcons className={classes.menuStyle} />\n      </IconButton>\n    </Fragment>\n  )\n\n  return (\n    <Fragment>\n      <div className={classes.root}>\n        <ElevationScroll>\n          <AppBar position=\"fixed\" className={classes.appbar}>\n            <Toolbar disableGutters>\n              <Button\n                disableRipple\n                onClick={() => setValue(0)}\n                to=\"/\"\n                className={classes.logoContainer}\n              >\n                <img className={classes.logo} src={logo} alt=\"caterfoods\" />\n              </Button>\n              {matches ? drawer : tabs}\n            </Toolbar>\n          </AppBar>\n        </ElevationScroll>\n        <div className={classes.toolBarMargin} />\n        <Grid\n          container\n          justify=\"center\"\n          alignItems=\"center\"\n          className={classes.heroText}\n        >\n          <Typography align=\"left\">\n            <Typography variant={matchesSM ? \"h4\" : \"h1\"}>\n              Nepalese Restaurant\n            </Typography>\n            <Typography variant={matchesSM ? \"h4\" : \"h1\"}>\n              Oringinal Cousine\n            </Typography>\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          container\n          justify=\"center\"\n          alignItems=\"center\"\n          className={classes.buttonContainer}\n        >\n          <Button\n            to=\"/order\"\n            variant=\"contained\"\n            className={classes.buttonR}\n            startIcon={<CustomIcon src={reserve} height={35} />}\n          >\n            RESERVATION\n          </Button>\n        </Grid>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Header\n",["47","48"],"/home/brainz/caterfoods/my-app/src/index.js",[],"/home/brainz/caterfoods/my-app/src/code/Components/CustomIcon.js",[],"/home/brainz/caterfoods/my-app/src/code/pages/Home/LandingPage.js",["49"],"/home/brainz/caterfoods/my-app/src/code/pages/Home/Menu.js",[],"/home/brainz/caterfoods/my-app/src/code/Components/context/ContextState.js",["50"],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"51","replacedBy":"55"},{"ruleId":"53","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":226,"column":6,"nodeType":"59","endLine":226,"endColumn":36,"suggestions":"60"},{"ruleId":"51","replacedBy":"61"},{"ruleId":"53","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":104,"column":18,"nodeType":"65","messageId":"66","endLine":104,"endColumn":26},{"ruleId":"63","severity":1,"message":"67","line":1,"column":42,"nodeType":"65","messageId":"66","endLine":1,"endColumn":51},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],["68"],["69"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setSelectedIndex' and 'setValue'. Either include them or remove the dependency array.","ArrayExpression",["70"],["68"],["69"],"no-unused-vars","'setDatas' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [value, selectedIndex, routes, setValue, setSelectedIndex]",{"range":"73","text":"74"},[5237,5267],"[value, selectedIndex, routes, setValue, setSelectedIndex]"]